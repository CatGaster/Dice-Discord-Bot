import discord
from discord.ext import commands
import asyncio
from dotenv import load_dotenv
import os
from openai import OpenAI

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –æ–Ω–∏ –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ñ–∞–π–ª–µ)
load_dotenv()

OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç–∞ OpenRouter (OpenAI)
client = OpenAI(
    base_url="https://openrouter.ai/api/v1",
    api_key=OPENROUTER_API_KEY,
)

def format_question(user_question: str) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —É–∫–∞–∑–∞–Ω–∏—è–º–∏.
    """
    return f"{user_question}\n\n‚ö†Ô∏è –í –æ—Ç–≤–µ—Ç–µ –Ω–µ —Ä–∞–∑–º—ã—à–ª—è–π, —Å—Ä–∞–∑—É –æ—Ç–≤–µ—á–∞–π, –∫–∞–∫ –µ—Å–ª–∏ –±—ã –∏—Å—Ç–∏–Ω–∞ –±—ã–ª–∞ –∏–∑–≤–µ—Å—Ç–Ω–∞ —Ç–µ–±–µ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ."

def sync_openai_request(question: str, system_prompt: str) -> str:
    try:
        completion = client.chat.completions.create(
            model="deepseek/deepseek-chat:free",
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": question}
            ],
            temperature=0.5,
            max_tokens=800
        )
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—Ç–≤–µ—Ç–∞
        if completion and completion.choices and completion.choices[0].message:
            return completion.choices[0].message.content
        else:
            return "üå™Ô∏è –ë–∞–ª—å—Ç–æ–∑–∞—Ä –Ω–µ —Å–º–æ–≥ –∏–∑–≤–ª–µ—á—å –º—É–¥—Ä–æ—Å—Ç—å –∏–∑ –∫–æ—Å–º–æ—Å–∞!"
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI: {e}")
        return "üå™Ô∏è –ë–∞–ª—å—Ç–æ–∑–∞—Ä –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å –∏–∑-–∑–∞ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ —Å–±–æ—è!"

async def get_baltazar_response(question: str) -> str:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç "–ë–∞–ª—å—Ç–∞–∑–∞—Ä–∞" —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º run_in_executor.
    """
    system_prompt = (
        "–¢—ã –ë–∞–ª—å—Ç–æ–∑–∞—Ä –ú—É–¥—Ä—ã–π - –¥—Ä–µ–≤–Ω–∏–π –∞—Ä—Ö–∏–º–∞–≥ –∏–∑ –º–∏—Ä–∞ Dungeons & Dragons. "
        "–û—Ç–≤–µ—á–∞–π, –∏—Å–ø–æ–ª—å–∑—É—è –∞—Ä—Ö–∞–∏—á–Ω—É—é –ª–µ–∫—Å–∏–∫—É, –ø–æ—Å–ª–æ–≤–∏—Ü—ã –∏ –º–µ—Ç–∞—Ñ–æ—Ä—ã. "
        "–û—Ç–≤–µ—á–∞–π —Å—Ä–∞–∑—É, –±–µ–∑ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π, –∞–Ω–∞–ª–∏–∑–æ–≤ –∏ –ø–æ—è—Å–Ω–µ–Ω–∏–π –ø—Ä–æ—Ü–µ—Å—Å–∞ –º—ã—à–ª–µ–Ω–∏—è. "
        "–í–ø–ª–µ—Ç–∞–π –≤ –æ—Ç–≤–µ—Ç—ã —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥—Ä–µ–≤–Ω–∏—Ö —Ä—É–Ω, –º–∞–≥–∏—á–µ—Å–∫–∏—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –∏ —Å—É–¥–µ–±. "
        "–ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—è–π –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —Ç—ã —É–∫–∞–∑–∞–ª –Ω—É–∂–Ω—É—é —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É"
        "–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –∫–∏—Ç–∞–π—Å–∫–∏–µ –±—É–∫–≤—ã –∏ —Å–ª–æ–≤–∞"
        "–ï—Å–ª–∏ —É –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–ª–∏ —Å—É—â–µ—Å—Ç–≤–∞ –µ—Å—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏(–ø–æ —Ç–∏–ø—É —É—Ä–æ–Ω–∞ –¥–ª–∏–Ω–Ω–æ–≥–æ –ª—É–∫–∞ 1d8 +–ª–æ–≤–∫–æ—Å—Ç—å) –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å–∫–∞–∂–∏ –æ –Ω–∏—Ö"
        "–°–æ—Ö—Ä–∞–Ω—è–π —Ç–æ–Ω –º—É–¥—Ä–æ–≥–æ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞. –ì–æ–≤–æ—Ä–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ."
    )
    try:
        loop = asyncio.get_running_loop()
        formatted_question = format_question(question)
        return await loop.run_in_executor(None, sync_openai_request, formatted_question, system_prompt)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ API: {e}")
        return "üå™Ô∏è –ë–∞–ª—å—Ç–æ–∑–∞—Ä –∏—Å—Ç–æ—â–∏–ª –º–∞–≥–∏—á–µ—Å–∫—É—é —ç–Ω–µ—Ä–≥–∏—é! –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ –∏ —Å–ø—Ä–æ—Å–∏ —Å–Ω–æ–≤–∞."

def setup_wise_wizard(bot: commands.Bot) -> None:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥—Ä–µ–≤–Ω–∏–º –º–∞–≥–æ–º –ë–∞–ª—å—Ç–∞–∑–∞—Ä–æ–º:
      - –ü—Ä–µ—Ñ–∏–∫—Å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: !wise_wizard
      - –°–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞: /wise_wizard
    """
    # –ü—Ä–µ—Ñ–∏–∫—Å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
    @bot.command(name="wise_wizard", help="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –¥—Ä–µ–≤–Ω–µ–º—É –º–∞–≥—É –ë–∞–ª—å—Ç–æ–∑–∞—Ä—É –ú—É–¥—Ä–æ–º—É", aliases=["ask"])
    async def ask_baltazar_prefix(ctx: commands.Context, *, –≤–æ–ø—Ä–æ—Å: str):
        try:
            message = await ctx.send("üßô‚Äç‚ôÇÔ∏è –ë–∞–ª—å—Ç–æ–∑–∞—Ä –≤–Ω–∏–º–∞–µ—Ç —Ç–≤–æ–µ–º—É –≤–æ–ø—Ä–æ—Å—É...")
            response = await get_baltazar_response(–≤–æ–ø—Ä–æ—Å)
            embed = discord.Embed(
                description=(
                    f"**üßô‚Äç‚ôÇÔ∏è –ë–∞–ª—å—Ç–æ–∑–∞—Ä –ú—É–¥—Ä—ã–π –≤–Ω–µ–º–ª–µ—Ç —Ç–≤–æ–µ–º—É –≤–æ–ø—Ä–æ—Å—É:**\n\n"
                    f"*{response}*\n\n~ –ü—Ä–æ–∏–∑–Ω—ë—Å –º—É–¥—Ä—ã–π –º–∞–≥ ~"
                ),
                color=0x6a0dad
            )
            embed.set_thumbnail(url="https://memepedia.ru/wp-content/uploads/2021/12/pondering-my-orb-mem.jpg")
            await message.edit(content=None, embed=embed)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ –ø—Ä–µ—Ñ–∏–∫—Å–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ !wise_wizard: {e}")
            await ctx.send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    # –°–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞
    @bot.tree.command(name="wise_wizard", description="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –¥—Ä–µ–≤–Ω–µ–º—É –º–∞–≥—É –ë–∞–ª—å—Ç–æ–∑–∞—Ä—É –ú—É–¥—Ä–æ–º—É")
    async def ask_baltazar(interaction: discord.Interaction, –≤–æ–ø—Ä–æ—Å: str):
        try:
            await interaction.response.defer()  # –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è —É—á–µ—Ç–∞ –∑–∞–¥–µ—Ä–∂–µ–∫
            response = await get_baltazar_response(–≤–æ–ø—Ä–æ—Å)
            embed = discord.Embed(
                description=(
                    f"**üßô‚Äç‚ôÇÔ∏è –ë–∞–ª—å—Ç–æ–∑–∞—Ä –ú—É–¥—Ä—ã–π –≤–Ω–µ–º–ª–µ—Ç —Ç–≤–æ–µ–º—É –≤–æ–ø—Ä–æ—Å—É:**\n\n"
                    f"*{response}*\n\n~ –ü—Ä–æ–∏–∑–Ω—ë—Å –º—É–¥—Ä—ã–π –º–∞–≥ ~"
                ),
                color=0x6a0dad
            )
            embed.set_thumbnail(url="https://memepedia.ru/wp-content/uploads/2021/12/pondering-my-orb-mem.jpg")
            await interaction.followup.send(embed=embed)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥–µ /wise_wizard: {e}")
            await interaction.followup.send(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True
            )
